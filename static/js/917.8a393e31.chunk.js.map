{"version":3,"file":"static/js/917.8a393e31.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,WAAMC,GAAN,iFACZF,EAAAA,EAAAA,IAAU,gBAAiB,CACtCG,OAAQ,CACND,MAAAA,EACAE,SAAU,QACVC,eAAe,KALM,mFAAH,sDAUXC,EAAmB,mCAAG,8FAC3BN,EAAAA,EAAAA,IAAU,sBAAuB,CACrCG,OAAQ,CACNC,SAAU,QACVC,eAAe,KAJc,mFAAH,qDAQnBE,EAAc,mCAAG,WAAMC,GAAN,iFACtBR,EAAAA,EAAAA,IAAA,gBAAmBQ,IADG,mFAAH,sDAGdC,EAAiB,mCAAG,WAAMD,GAAN,iFACzBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADyB,mFAAH,sDAGjBE,EAAiB,mCAAG,WAAMF,GAAN,iFACzBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADyB,mFAAH,qD,oDChB9B,IAXkB,SAAC,GAAmB,IAAjBG,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MACvB,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,OAClB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaL,GAAMM,MAAO,CAAEC,KAAMJ,EAAWC,GAArD,SACGH,KAIR,C,sJCTKO,EAAkBC,EAAAA,EAAAA,OAAH,icAmBfC,EAAaD,EAAAA,EAAAA,KAAH,8KAUVE,EAAmBF,EAAAA,EAAAA,OAAH,oRAehBG,EAAkBH,EAAAA,EAAAA,MAAH,4P,SCrCRI,EAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAG1B,OACE,SAACN,EAAD,WACE,UAACE,EAAD,CAAYI,SAAUA,EAAtB,WACE,SAACF,EAAD,CACEG,KAAK,OACLC,KAAK,QACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mBAEd,UAACR,EAAD,CAAkBI,KAAK,SAAvB,WACE,SAAC,MAAD,CAAUK,KAAM,KAAM,iBAK/B,E,kCCuBD,EA5CmB,WAAO,IAAD,EACvB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMnC,EAAK,UAAGkC,EAAaE,IAAI,gBAApB,QAAgC,IAE3CC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEKvC,EAAAA,EAAAA,IAAYC,GAFjB,UAGM,OADduC,EAFQ,QAGLC,OAHK,sBAIN,IAAIC,MAJE,OAMdT,EAAUO,EAAKG,KAAKC,SANN,gDAQdC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,4DATE,yDAAH,qDAYD,KAAV9C,GACFsC,GAEH,GAAE,CAACtC,IAWJ,OACE,iCACE,SAACsB,EAAD,CAAWC,SAXO,SAAAwB,GACpBA,EAAIC,iBAEJ,IAAMC,EAAeF,EAAIG,OAAOC,SAASnD,MAAMoD,MAAMC,OACrDlB,EAAgB,CAAEnC,MAAOiD,IAEzBF,EAAIG,OAAOI,OACZ,KAKG,wBACGvB,EAAOwB,KAAI,gBAAGC,EAAH,EAAGA,eAAgB/C,EAAnB,EAAmBA,GAAnB,OACV,SAACgD,EAAA,EAAD,CAAoBhD,GAAIA,EAAIC,MAAO8C,GAAnB/C,EADN,QAMnB,C","sources":["api.js","components/MovieList/MovieList.jsx","components/Searchbar/Searchbar.styled.js","components/Searchbar/Searchbar.jsx","pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWVlZWU2MWE5YzQ0ZDg3MDU2MGU5MDk3YWYzOWFiYSIsInN1YiI6IjY0ZWRkZDMzNTI1OGFlMDEyY2E2YzI4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DwVyqR8KU5ITMf03TmwDmKexNT2Ro5Hf1FcrLtmXnOE';\n\nexport const fetchMovies = async query => {\n  return await axios.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get('/trending/movie/day', {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\nexport const fetchMovieById = async movieId =>\n  await axios.get(`movie/${movieId}`);\n\nexport const fetchMovieCredits = async movieId =>\n  await axios.get(`/movie/${movieId}/credits`);\n\nexport const fetchMovieReviews = async movieId =>\n  await axios.get(`/movie/${movieId}/reviews`);\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieList = ({ id, title }) => {\n  const { pathname, search } = useLocation();\n  return (\n    <li>\n      <Link to={`/movies/${id}`} state={{ from: pathname + search }}>\n        {title}\n      </Link>\n    </li>\n  );\n};\n\nexport default MovieList;\n","import styled from '@emotion/styled';\n\nconst SearchbarHeader = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #e4e4e4;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nconst SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n`;\n\nconst SearchFormButton = styled.button`\n  display: inline-block;\n  width: 100px;\n  height: 48px;\n  border: 0;\n  opacity: 0.6;\n  background-color: #8298d1;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  cursor: pointer;\n  outline: none;\n  :hover {\n    opacity: 1;\n  }\n`;\n\nconst SearchFormInput = styled.input`\n  display: inline-block;\n  width: 100%;\n  font: inherit;\n  font-size: 20px;\n  border: none;\n  outline: none;\n  padding-left: 4px;\n  padding-right: 4px;\n\n  ::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\nexport {\n  SearchbarHeader,\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n};\n","import { FcSearch } from 'react-icons/fc';\n\nimport {\n  SearchForm,\n  SearchFormButton,\n  SearchFormInput,\n  SearchbarHeader,\n} from './Searchbar.styled';\n\nexport const Searchbar = ({ onSubmit }) => {\n\n  \n  return (\n    <SearchbarHeader>\n      <SearchForm onSubmit={onSubmit}>\n        <SearchFormInput\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n        <SearchFormButton type=\"submit\">\n          <FcSearch size={25} /> Search\n        </SearchFormButton>\n      </SearchForm>\n    </SearchbarHeader>\n  );\n};\n","import { toast } from 'react-hot-toast';\nimport { Searchbar } from 'components/Searchbar/Searchbar';\nimport { useEffect, useState } from 'react';\nimport { fetchMovies } from '../../api';\nimport MovieList from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        const resp = await fetchMovies(query);\n        if (resp.status !== 200) {\n          throw new Error();\n        }\n        setMovies(resp.data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error('Something went wrong! Reload the page or try again later');\n      }\n    };\n    if (query !== '') {\n      getMovies();\n    }\n  }, [query]);\n\n  const handlerSubmit = evt => {\n    evt.preventDefault();\n\n    const queryCurrent = evt.target.elements.query.value.trim();\n    setSearchParams({ query: queryCurrent });\n    \n    evt.target.reset();\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handlerSubmit} />\n      <ul>\n        {movies.map(({ original_title, id }) => (\n          <MovieList key={id} id={id} title={original_title} />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["axios","fetchMovies","query","params","language","include_adult","fetchTrendingMovies","fetchMovieById","movieId","fetchMovieCredits","fetchMovieReviews","id","title","useLocation","pathname","search","to","state","from","SearchbarHeader","styled","SearchForm","SearchFormButton","SearchFormInput","Searchbar","onSubmit","type","name","autoComplete","autoFocus","placeholder","size","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","getMovies","resp","status","Error","data","results","console","log","toast","evt","preventDefault","queryCurrent","target","elements","value","trim","reset","map","original_title","MovieList"],"sourceRoot":""}