{"version":3,"file":"static/js/686.524c7d8a.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,WAAMC,GAAN,iFACZF,EAAAA,EAAAA,IAAU,gBAAiB,CACtCG,OAAQ,CACND,MAAAA,EACAE,SAAU,QACVC,eAAe,KALM,mFAAH,sDAUXC,EAAmB,mCAAG,8FAC3BN,EAAAA,EAAAA,IAAU,sBAAuB,CACrCG,OAAQ,CACNC,SAAU,QACVC,eAAe,KAJc,mFAAH,qDAQnBE,EAAc,mCAAG,WAAMC,GAAN,iFACtBR,EAAAA,EAAAA,IAAA,gBAAmBQ,IADG,mFAAH,sDAGdC,EAAiB,mCAAG,WAAMD,GAAN,iFACzBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADyB,mFAAH,sDAGjBE,EAAiB,mCAAG,WAAMF,GAAN,iFACzBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADyB,mFAAH,qD,+LC1BjBG,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAH,yJAUTE,EAAmBF,EAAAA,EAAAA,IAAH,sHCXhBG,EAAYH,EAAAA,EAAAA,IAAH,wC,SC+FtB,EAxFqB,WACnB,IAAQJ,GAAYQ,EAAAA,EAAAA,MAAZR,QACR,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQC,GAAUC,EAAAA,EAAAA,MAAVD,MAkBR,IAhBAE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,8GAEEhB,EAAAA,EAAAA,IAAeC,GAFjB,UAGG,OADdgB,EAFW,QAGRC,OAHQ,sBAIT,IAAIC,MAJK,OAMjBP,EAASK,EAAKG,MANG,gDAQjBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,4DATK,yDAAH,qDAYlBP,GACD,GAAE,CAACf,IAECU,EAAL,CAGA,IACEa,EAMEb,EANFa,eACAC,EAKEd,EALFc,YACAC,EAIEf,EAJFe,aACAC,EAGEhB,EAHFgB,SACAC,EAEEjB,EAFFiB,OACAC,EACElB,EADFkB,aAEIC,EAAgBF,EAAOG,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KACrDC,EAAaT,EAAaU,MAAM,KAAK,GACrCC,EAAYC,KAAKC,MAAqB,GAAfV,GAE7B,OACE,UAACrB,EAAD,YACE,UAACJ,EAAD,CAAWoC,GAAI3B,EAAM4B,KAArB,WACE,SAAC,MAAD,IAAe,eAEjB,UAAClC,EAAD,YACE,gBACEmC,IAAG,0CAAqCjB,GACxCkB,IAAKnB,KAEP,4BACE,0BACGA,EAAe,IAAEW,EAAW,QAE/B,yBAAG,eAAaE,EAAU,QAC1B,wBAAI,cACJ,uBAAIV,KACJ,wBAAI,YACJ,yBAAG,IAAEG,YAGT,uBAAG,4BACH,2BACE,yBACE,SAAC,KAAD,CAAMU,GAAG,OAAO3B,MAAO,CAAE4B,KAAM5B,EAAM4B,MAArC,SAA6C,YAI/C,yBACE,SAAC,KAAD,CAAMD,GAAG,UAAU3B,MAAO,CAAE4B,KAAM5B,EAAM4B,MAAxC,SAAgD,kBAKpD,mBACA,SAAC,EAAAG,SAAD,CACEC,UACE,SAACC,EAAA,EAAD,CACEC,MAAM,UACNC,YAAa,CACXC,SAAU,QACVC,IAAK,MACLC,KAAM,SAPd,UAYE,SAAC,KAAD,QA5DL,CAgEF,C","sources":["api.js","pages/MovieDetailsPage/MovieDetails.styled.js","components/Conteiner.js","pages/MovieDetailsPage/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWVlZWU2MWE5YzQ0ZDg3MDU2MGU5MDk3YWYzOWFiYSIsInN1YiI6IjY0ZWRkZDMzNTI1OGFlMDEyY2E2YzI4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DwVyqR8KU5ITMf03TmwDmKexNT2Ro5Hf1FcrLtmXnOE';\n\nexport const fetchMovies = async query => {\n  return await axios.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get('/trending/movie/day', {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\nexport const fetchMovieById = async movieId =>\n  await axios.get(`movie/${movieId}`);\n\nexport const fetchMovieCredits = async movieId =>\n  await axios.get(`/movie/${movieId}/credits`);\n\nexport const fetchMovieReviews = async movieId =>\n  await axios.get(`/movie/${movieId}/reviews`);\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const GoBackBtn = styled(Link)`\n  display: block;\n  margin-bottom: 10px;\n  color: black;\n  text-decoration: none;\n  svg {\n    vertical-align: bottom;\n  }\n`;\n\nexport const MovieDetailsWrap = styled.div`\n  display: flex;\n  gap: 15px;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #d6c8c8;\n`;\n","import styled from \"@emotion/styled\";\n\nexport const Conteiner = styled.div`\npadding: 10px;\n`","import toast from 'react-hot-toast';\nimport { PacmanLoader } from 'react-spinners';\nimport { BiArrowBack } from 'react-icons/bi';\nimport { useState, useEffect, Suspense } from 'react';\nimport { Link, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { fetchMovieById } from 'api';\nimport { GoBackBtn, MovieDetailsWrap } from './MovieDetails.styled';\nimport { Conteiner } from 'components/Conteiner';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n  const { state } = useLocation();\n\n  useEffect(() => {\n    const getMovieById = async () => {\n      try {\n        const resp = await fetchMovieById(movieId);\n        if (resp.status !== 200) {\n          throw new Error();\n        }\n        setMovie(resp.data);\n      } catch (error) {\n        console.log(error);\n        toast.error('Something went wrong! Reload the page or try again later');\n      }\n    };\n    getMovieById();\n  }, [movieId]);\n\n  if (!movie) {\n    return;\n  }\n  const {\n    original_title,\n    poster_path,\n    release_date,\n    overview,\n    genres,\n    vote_average,\n  } = movie;\n  const currentGenres = genres.map(genre => genre.name).join(' ');\n  const yearRelise = release_date.split('-')[0];\n  const userScore = Math.round(vote_average * 10);\n\n  return (\n    <Conteiner>\n      <GoBackBtn to={state.from}>\n        <BiArrowBack /> Go back\n      </GoBackBtn>\n      <MovieDetailsWrap>\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${poster_path}`}\n          alt={original_title}\n        />\n        <div>\n          <h2>\n            {original_title}({yearRelise})\n          </h2>\n          <p>User score: {userScore}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p> {currentGenres}</p>\n        </div>\n      </MovieDetailsWrap>\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: state.from }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: state.from }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense\n        fallback={\n          <PacmanLoader\n            color=\"#4d9ded\"\n            cssOverride={{\n              position: 'fixed',\n              top: '50%',\n              left: '50%',\n            }}\n          />\n        }\n      >\n        <Outlet />\n      </Suspense>\n    </Conteiner>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","fetchMovies","query","params","language","include_adult","fetchTrendingMovies","fetchMovieById","movieId","fetchMovieCredits","fetchMovieReviews","GoBackBtn","styled","Link","MovieDetailsWrap","Conteiner","useParams","useState","movie","setMovie","state","useLocation","useEffect","getMovieById","resp","status","Error","data","console","log","toast","original_title","poster_path","release_date","overview","genres","vote_average","currentGenres","map","genre","name","join","yearRelise","split","userScore","Math","round","to","from","src","alt","Suspense","fallback","PacmanLoader","color","cssOverride","position","top","left"],"sourceRoot":""}