{"version":3,"file":"static/js/186.6798c853.chunk.js","mappings":"8SACAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAW,mCAAG,WAAMC,GAAN,iFACZF,EAAAA,EAAAA,IAAU,gBAAiB,CACtCG,OAAQ,CACND,MAAAA,EACAE,SAAU,QACVC,eAAe,KALM,mFAAH,sDAUXC,EAAmB,mCAAG,8FAC3BN,EAAAA,EAAAA,IAAU,sBAAuB,CACrCG,OAAQ,CACNC,SAAU,QACVC,eAAe,KAJc,mFAAH,qDAQnBE,EAAc,mCAAG,WAAMC,GAAN,iFACtBR,EAAAA,EAAAA,IAAA,gBAAmBQ,IADG,mFAAH,sDAGdC,EAAiB,mCAAG,WAAMD,GAAN,iFACzBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADyB,mFAAH,sDAGjBE,EAAiB,mCAAG,WAAMF,GAAN,iFACzBR,EAAAA,EAAAA,IAAA,iBAAoBQ,EAApB,aADyB,mFAAH,qD,gHCa9B,UArCgB,WACd,OAA8BG,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQL,GAAYM,EAAAA,EAAAA,MAAZN,QAmBR,OAjBAO,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,8GAEDN,EAAAA,EAAAA,IAAkBF,GAFjB,UAIA,OAFdS,EAFc,QAIXC,OAJW,sBAKZ,IAAIC,MALQ,OAOpBN,EAAWI,EAAKG,KAAKC,SAPD,gDASpBC,QAAQC,IAAR,MACAC,EAAAA,GAAAA,MAAY,4DAVQ,yDAAH,qDAcrBR,GACD,GAAE,CAACR,KAEF,yBACsB,IAAnBI,EAAQa,OACPb,EAAQc,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACV,4BACE,0BAAI,WAASF,MACb,uBAAIC,MAFIC,EADA,KAOZ,yBAAK,8CAIZ,C","sources":["api.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI4ZWVlZWU2MWE5YzQ0ZDg3MDU2MGU5MDk3YWYzOWFiYSIsInN1YiI6IjY0ZWRkZDMzNTI1OGFlMDEyY2E2YzI4NyIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.DwVyqR8KU5ITMf03TmwDmKexNT2Ro5Hf1FcrLtmXnOE';\n\nexport const fetchMovies = async query => {\n  return await axios.get('/search/movie', {\n    params: {\n      query,\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n};\n\nexport const fetchTrendingMovies = async () =>\n  await axios.get('/trending/movie/day', {\n    params: {\n      language: 'en-US',\n      include_adult: false,\n    },\n  });\n\nexport const fetchMovieById = async movieId =>\n  await axios.get(`movie/${movieId}`);\n\nexport const fetchMovieCredits = async movieId =>\n  await axios.get(`/movie/${movieId}/credits`);\n\nexport const fetchMovieReviews = async movieId =>\n  await axios.get(`/movie/${movieId}/reviews`);\n","import { toast } from 'react-hot-toast';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { fetchMovieReviews } from '../../api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const getMovieReviews = async () => {\n      try {\n        const resp = await fetchMovieReviews(movieId);\n\n        if (resp.status !== 200) {\n          throw new Error();\n        }\n        setReviews(resp.data.results);\n      } catch (error) {\n        console.log(error);\n        toast.error('Something went wrong! Reload the page or try again later');\n      }\n    };\n\n    getMovieReviews();\n  }, [movieId]);\n  return (\n    <div>\n      {reviews.length !== 0 ? (\n        reviews.map(({ author, content, id }) => (\n          <div key={id}>\n            <h3>Author: {author}</h3>\n            <p>{content}</p>\n          </div>\n        ))\n      ) : (\n        <div>We don't have any reviews for this movie</div>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["axios","fetchMovies","query","params","language","include_adult","fetchTrendingMovies","fetchMovieById","movieId","fetchMovieCredits","fetchMovieReviews","useState","reviews","setReviews","useParams","useEffect","getMovieReviews","resp","status","Error","data","results","console","log","toast","length","map","author","content","id"],"sourceRoot":""}